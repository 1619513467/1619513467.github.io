{"pages":[],"posts":[{"title":"C语言写友好函数","text":"写函数，以两个正整数为参数，如果该两数是友好的，返回t，否则返回f。如果这两个每个的约数和（除了本身以外）等于对方整数，则称这对数是友好的。（例如：1184的约数和有：1+2+4+8+16+32+37+74+148+296+592=1210；1210的约数和有：1+2+5+10+11+22+55+110+121+242+605=1184。这对数是友好的。） 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int facsum(int n){ int x=0; for(int i=1;i&lt;n;i++) if (n%i==0) x+=i; return x;}int main(){ int m,n; printf(&quot;请输入两个整数:\\n&quot;); scanf(&quot;%d %d&quot;,&amp;m,&amp;n); if (facsum(n)==m&amp;&amp;facsum(m)==n) { printf(&quot;%d和%d是友元\\n&quot;,m,n); } else { printf(&quot;%d和%d不是友元\\n&quot;,m,n); } return 0;}","link":"/2019/05/16/filename/"},{"title":"C++","text":"声明Book与Ruler两个类，二者都有weight属性，定义二者的一个友元函数totalWeight（），计算二者的重量和。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include&lt;iostream&gt;using namespace std;class Ruler;class Book{ private: int weight1; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();};void Book::init(){ cout&lt;&lt;&quot;请输入书的重量：&quot;&lt;&lt;endl; cin&gt;&gt;weight1;}class Ruler{ private: int weight2; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();};void Ruler::init(){ cout&lt;&lt;&quot;请输入尺子的重量：&quot;&lt;&lt;endl; cin&gt;&gt;weight2;}void totalWeight(Book &amp;b,Ruler &amp;r){ cout&lt;&lt;&quot;二者的重量和为：&quot;&lt;&lt;b.weight1+r.weight2&lt;&lt;endl; } int main(){ Book book; Ruler ruler; book.init(); ruler.init(); totalWeight(book,ruler); return 0;}","link":"/2019/06/13/filename-C++/"}],"tags":[{"name":"C语言,友好,友好函数","slug":"C语言-友好-友好函数","link":"/tags/C语言-友好-友好函数/"},{"name":"类,友元","slug":"类-友元","link":"/tags/类-友元/"}],"categories":[]}