[{"title":"C++","date":"2019-06-13T12:36:13.145Z","path":"2019/06/13/filename-C++/","text":"声明Book与Ruler两个类，二者都有weight属性，定义二者的一个友元函数totalWeight（），计算二者的重量和。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include&lt;iostream&gt;using namespace std;class Ruler;class Book&#123; private: int weight1; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();&#125;;void Book::init()&#123; cout&lt;&lt;\"请输入书的重量：\"&lt;&lt;endl; cin&gt;&gt;weight1;&#125;class Ruler&#123; private: int weight2; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();&#125;;void Ruler::init()&#123; cout&lt;&lt;\"请输入尺子的重量：\"&lt;&lt;endl; cin&gt;&gt;weight2;&#125;void totalWeight(Book &amp;b,Ruler &amp;r)&#123; cout&lt;&lt;\"二者的重量和为：\"&lt;&lt;b.weight1+r.weight2&lt;&lt;endl; &#125; int main()&#123; Book book; Ruler ruler; book.init(); ruler.init(); totalWeight(book,ruler); return 0;&#125;","tags":[{"name":"类,友元","slug":"类-友元","permalink":"http://www.yichen.online/tags/类-友元/"}]},{"title":"C语言写友好函数","date":"2019-05-16T15:38:44.530Z","path":"2019/05/16/filename/","text":"写函数，以两个正整数为参数，如果该两数是友好的，返回t，否则返回f。如果这两个每个的约数和（除了本身以外）等于对方整数，则称这对数是友好的。（例如：1184的约数和有：1+2+4+8+16+32+37+74+148+296+592=1210；1210的约数和有：1+2+5+10+11+22+55+110+121+242+605=1184。这对数是友好的。） 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int facsum(int n)&#123; int x=0; for(int i=1;i&lt;n;i++) if (n%i==0) x+=i; return x;&#125;int main()&#123; int m,n; printf(&quot;请输入两个整数:\\n&quot;); scanf(&quot;%d %d&quot;,&amp;m,&amp;n); if (facsum(n)==m&amp;&amp;facsum(m)==n) &#123; printf(&quot;%d和%d是友元\\n&quot;,m,n); &#125; else &#123; printf(&quot;%d和%d不是友元\\n&quot;,m,n); &#125; return 0;&#125;","tags":[{"name":"C语言,友好,友好函数","slug":"C语言-友好-友好函数","permalink":"http://www.yichen.online/tags/C语言-友好-友好函数/"}]}]