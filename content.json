[{"title":"学生通讯录管理系统","date":"2019-12-14T13:43:16.898Z","path":"2019/12/14/通讯录管理系统/","text":"设计要求问题描述&nbsp; 纸质的通讯录系统已经不能满足大家的要求，容易丢失、查找困难等问题是纸质通讯录所不能克服的缺点。“学生通讯管理系统”是为了帮助老师、同学，或者其他一些需要使用通讯录的人员进行管理和分析的一种应用程序。 需求分析 输入数据建立通讯录 查询通讯录系统中满足要求的信息 插入新的通讯录信息 删除不需要的通讯录信息 查看所有通讯录信息 概要设计主界面设计&nbsp; 为了实现学生通讯录管理系统各功能的管理，设计一个含有多个菜单项的主控菜单子程序以链接系统的各项子功能，方便用户使用本系统。本系统主控菜单运行界面如图所示。 存储结构设计&nbsp; 本系统主要采用链表结构类型来表示存储在“学生通讯录管理系统”中的信息。其中，链表结点由四个分量构成；通讯录成员学号、通讯录成员姓名、通讯录成员电话号码、指向该结构体的指针。 系统功能设计本系统设置了5个子功能菜单，5个子功能的设计描述如下。 建立通讯录系统。可以一次输入多个成员通讯录的信息，建立通讯录。 插入通讯记录。每次可以插入一个成员通讯录的信息。如果要连续插入多个成员通讯录信息必须多次选择该功能。 查询通讯记录。可以按两种方式查询所需要的通讯录成员记录，一是按学号查询，二是按姓名查询。 删除通讯记录。可以对通讯录中不再需要的信息进行删除。 显示通讯录系统。可以查看通讯录中所有的通讯录成员记录。 程序代码include &lt;stdio.h&gt;# include &lt;stdlib.h&gt;# include &lt;string.h&gt;typedef struct student //定义学生结点&#123; char name[20]; //姓名 int num; //学号 char phone[20]; //电话 struct student *next;&#125;stud;void Menu() //菜单&#123; printf(\"\\n\\n\\n\"); printf(\"***********************班级通讯录管理系统***********************\\n\\n\"); printf(\" 1.建立通讯录 \\n\\n\"); printf(\" 2.添加通讯录 \\n\\n\"); printf(\" 3.删除通讯录 \\n\\n\"); printf(\" 4.查询通讯录 \\n\\n\"); printf(\" 5.显示通讯录 \\n\\n\"); printf(\" 0.退出系统 \\n\\n\"); printf(\"****************************************************************\\n\");&#125;void Init(stud *H) //初始化&#123; H-&gt;next=NULL;&#125;void Input(stud *H) //输入&#123; int n; stud *p, *q; p=H; while(p-&gt;next) &#123; p=p-&gt;next; //p指向链表的最后一个结点 &#125; while(true) &#123; q=(stud *)malloc(sizeof(stud)); //申请空间 q-&gt;next = NULL; printf(\"请输入学生信息：\\n\"); printf(\"姓名：\"); scanf(\"%s\", &amp;q-&gt;name); printf(\"\\n\"); printf(\"学号：\"); scanf(\"%d\", &amp;q-&gt;num); printf(\"\\n\"); printf(\"电话：\"); scanf(\"%s\", &amp;q-&gt;phone); printf(\"\\n\"); p-&gt;next=q; p=q;// system(\"cls\"); //清屏 printf(\"是否接着输入：1(继续)/0(结束)\\n\"); scanf(\"%d\", &amp;n); if(n==0) break; &#125;&#125;void Output(stud *H) //显示输出&#123;// system(\"cls\"); stud *p; p = H-&gt;next; if(!p) &#123; printf(\"\\n没有学生记录!!!\\n\"); return ; &#125; printf(\"姓名 学号 电话\\n\"); while(p) //输出学生记录 &#123; printf(\"%s %d %s\\n\", p-&gt;name, p-&gt;num,p-&gt;phone); p=p-&gt;next; &#125;&#125;void Findm(stud *H) //查询姓名 &#123;// system(\"cls\"); char str[20]; bool f=false; stud *p; p=H-&gt;next; printf(\"请输入姓名：\\n\"); scanf(\"%s\", str); if(!p) &#123; printf(\"没有符合条件的学生记录！\\n\"); return ; &#125; printf(\"姓名 学号 电话\\n\"); while(p) &#123; if(strcmp(str, p-&gt;name)==0) //找到了一条符合条件的记录 &#123; f=true; printf(\"%s %d %s\\n\", p-&gt;name, p-&gt;num,p-&gt;phone); &#125; p=p-&gt;next; &#125; if(!f) &#123; printf(\"没有符合条件的学生记录！\\n\"); &#125;&#125;void Findh(stud *H) //查询学号 &#123;// system(\"cls\"); char str; bool f=false; stud *p; p=H-&gt;next; printf(\"请输入学号：\\n\"); scanf(\"%d\", str); if(!p) &#123; printf(\"没有符合条件的学生记录！\\n\"); return ; &#125; printf(\"姓名 学号 电话\\n\"); while(p) &#123; if(str==p-&gt;num) //找到了一条符合条件的记录 &#123; f=true; printf(\"%s %d %s\\n\", p-&gt;name, p-&gt;num, p-&gt;phone); &#125; p=p-&gt;next; &#125; if(!f) &#123; printf(\"没有符合条件的学生记录！\\n\"); &#125;&#125;void Find(stud *H) //查询 &#123; int select;// system(\"cls\"); printf(\"*************************查询**************************************\\n\\n\"); printf(\" 1.按姓名 \\n\\n\"); printf(\" 2.按学号 \\n\\n\"); printf(\" 0.退出 \\n\\n\"); printf(\"*******************************************************************\\n\\n\"); while(true) &#123; printf(\"请选择（0-2）\"); scanf(\"%d\",&amp;select); if(select&gt;=0&amp;&amp;select&lt;3) break; &#125; switch(select) &#123;// case 0: return 0; break; case 1: Findm(H); break; case 2: Findh(H); break; &#125;&#125;void Del(stud *H)//删除学生信息&#123; char str[20]; printf(\"\\n请输入要删除记录的姓名：\\n\"); scanf(\"%s\", str); stud *p, *q; p=H; q=H-&gt;next; bool flag=false; while(q) &#123; if(strcmp(q-&gt;name, str)==0) &#123; flag=true; p-&gt;next=q-&gt;next; q=p-&gt;next;break; &#125; p=q; q=q-&gt;next; &#125; printf(\"\\n删除成功！！\\n\"); printf(\"\\n\\n删除成功后的学生通讯信息：\\n\"); Output(H); &#125;void Add(stud *H) //添加学生信息&#123; int n; stud *p, *q; p=H; while(p-&gt;next) //p指向链表的最后一个结点 &#123; p=p-&gt;next; &#125; while(true) &#123; q=(stud *)malloc(sizeof(stud)); //申请空间 q-&gt;next = NULL; printf(\"\\n请输入添加学生的信息：\\n\"); printf(\"姓名：\"); scanf(\"%s\", &amp;q-&gt;name); printf(\"\\n\"); printf(\"学号：\"); scanf(\"%d\", &amp;q-&gt;num); printf(\"\\n\"); printf(\"电话：\"); scanf(\"%s\", &amp;q-&gt;phone); printf(\"\\n\"); p-&gt;next=q; p=q;// system(\"cls\"); //清屏 printf(\"是否继续添加：1(继续)/0(结束)\\n\"); scanf(\"%d\", &amp;n); if(n==0) break; &#125; printf(\"\\n添加成功！\\n\"); printf(\"\\n\\n添加成功后的学生通讯信息：\\n\"); Output(H); &#125;int main()&#123; stud *H; H = (stud *)malloc(sizeof(stud)); //注意，申请空间的时候最好是在主函数中申请 Init(H); //初始化，申请一个头结点 bool flag; int select, m; while(true) &#123; Menu(); printf(\"请输入(0-5):\\n\"); flag=true; while(flag) &#123; flag=false; scanf(\"%d\", &amp;select); if(select&lt;0 || select&gt;5) &#123; printf(\"输入不正确，请重新输入(0-5):\\n\"); flag=true; &#125; &#125; switch(select) &#123; case 0: return 0; break; case 1: Input(H); break; case 2: Add(H); break; case 3: Del(H); break; case 4: Find(H); break; case 5: Output(H); break; &#125; printf(\"\\n请选择:1(继续)/0(结束)\\n\"); scanf(\"%d\", &amp;m); if(m==0) return 0;// system(\"cls\"); //清屏 &#125; return 0;&#125; 微信公众号","tags":[{"name":"C语言","slug":"C语言","permalink":"http://www.yichen.online/tags/C%E8%AF%AD%E8%A8%80/"}]},{"title":"Html 初学笔记","date":"2019-12-05T15:20:26.134Z","path":"2019/12/05/认识HTML/","text":"认识Html 超文本编辑语言（Hyper Text Markup Language）是Internet上用来编写网页的主要语言。html是一种描述性标记语言，用来描述页面内容的显示方式；以HTML语言为主编写的HTML是一种纯文本文件，以 .html或.htm为后缀。 【语法】&lt;标签&gt; 内容 &lt;/标签&gt;其中： 标签通常都是成对出现，有开始的&lt;标签&gt;，有对应的结束的&lt;/标签&gt;。 内容是一些纯文本文字或标签。 HTML元素指的是从开始标签到结束标签的所有代码。 【title元素】&lt;title&gt; 一个简单的页面 &lt;/title&gt;HTML文档具体结构： 在HTML文件的第一行中，使用&lt;!DOCTYPE&gt;标签来指定文档类型定义，&lt;!DOCTYPE&gt;标签需放在所有文档标签之前，用于说明文档使用的HTML或XHTML的特定版本，并告诉浏览器后续内容应依照什么方式来进行解析。 HTML文档结构是由三大元素组成。 html元素：HTML文档是以标签开始，以标签结束。文档的所有内容都需要放在这两个标签之间。 head元素：页面头部信息用于像浏览器提供整个页面的基本信息，但不包括页面的主体内容。头部信息主要包括页面的标题、元信息、CSS样式、JavaScript脚本等元素。 body元素：网页的正文，用户在浏览器主体窗口中看到的信息，包括图片、表格、段落、视频等内容，且须位于标签之内。 【实例代码】&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt; 第一个网页 &lt;/title&gt; &lt;/head&gt; &lt;body&gt; hello world ! &lt;/body&gt; &lt;/html&gt;【实例效果】","tags":[{"name":"Html","slug":"Html","permalink":"http://www.yichen.online/tags/Html/"}]},{"title":"C++用类写友元","date":"2019-06-13T12:36:13.145Z","path":"2019/06/13/filename-C++/","text":"声明Book与Ruler两个类，二者都有weight属性，定义二者的一个友元函数totalWeight（），计算二者的重量和。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647#include&lt;iostream&gt;using namespace std;class Ruler;class Book&#123; private: int weight1; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();&#125;;void Book::init()&#123; cout&lt;&lt;\"请输入书的重量：\"&lt;&lt;endl; cin&gt;&gt;weight1;&#125;class Ruler&#123; private: int weight2; friend void totalWeight(Book &amp;b,Ruler &amp;r); public: void init();&#125;;void Ruler::init()&#123; cout&lt;&lt;\"请输入尺子的重量：\"&lt;&lt;endl; cin&gt;&gt;weight2;&#125;void totalWeight(Book &amp;b,Ruler &amp;r)&#123; cout&lt;&lt;\"二者的重量和为：\"&lt;&lt;b.weight1+r.weight2&lt;&lt;endl; &#125; int main()&#123; Book book; Ruler ruler; book.init(); ruler.init(); totalWeight(book,ruler); return 0;&#125;","tags":[{"name":"C++","slug":"C","permalink":"http://www.yichen.online/tags/C/"}]},{"title":"C语言写友好函数","date":"2019-05-16T15:38:44.530Z","path":"2019/05/16/filename/","text":"写函数，以两个正整数为参数，如果该两数是友好的，返回t，否则返回f。如果这两个每个的约数和（除了本身以外）等于对方整数，则称这对数是友好的。（例如：1184的约数和有：1+2+4+8+16+32+37+74+148+296+592=1210；1210的约数和有：1+2+5+10+11+22+55+110+121+242+605=1184。这对数是友好的。） 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int facsum(int n)&#123; int x&#x3D;0; for(int i&#x3D;1;i&lt;n;i++) if (n%i&#x3D;&#x3D;0) x+&#x3D;i; return x;&#125;int main()&#123; int m,n; printf(&quot;请输入两个整数:\\n&quot;); scanf(&quot;%d %d&quot;,&amp;m,&amp;n); if (facsum(n)&#x3D;&#x3D;m&amp;&amp;facsum(m)&#x3D;&#x3D;n) &#123; printf(&quot;%d和%d是友元\\n&quot;,m,n); &#125; else &#123; printf(&quot;%d和%d不是友元\\n&quot;,m,n); &#125; return 0;&#125;","tags":[{"name":"C语言","slug":"C语言","permalink":"http://www.yichen.online/tags/C%E8%AF%AD%E8%A8%80/"}]}]